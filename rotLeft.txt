using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution
{
    // Complete the rotLeft function below.
    static int[] rotLeft(int[] a, int d)
    {
        d = d % a.Count();
        int[] b = new int[a.Count()];
        for (int i = 0; i < a.Count(); i++)
        {
            // 0 -> a.length - d
            // 1 -> 1 + a.length - d
            int j = (i + a.Count() - d) % a.Count();
            b[j] = a[i];
        }
        return b;
    }

    static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] nd = Console.ReadLine().Split(' ');

        int n = Convert.ToInt32(nd[0]);

        int d = Convert.ToInt32(nd[1]);

        int[] a = Array.ConvertAll(Console.ReadLine().Split(' '), aTemp => Convert.ToInt32(aTemp));
        int[] result =  rotLeft(a, d);//leftRotate(a, d,n);//
        for (int i = 0; i < result.Length; i++)
        {
            Console.WriteLine(i);
        }
        Console.Read();

        textWriter.WriteLine(string.Join(" ", result));

        textWriter.Flush();
        textWriter.Close();
    }
}